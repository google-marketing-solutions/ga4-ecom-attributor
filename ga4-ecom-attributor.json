{
    "exportFormatVersion": 2,
    "exportTime": "2023-11-29 10:46:48",
    "containerVersion": {
        "path": "accounts/6061867848/containers/96331105/versions/0",
        "accountId": "6061867848",
        "containerId": "96331105",
        "containerVersionId": "0",
        "container": {
            "path": "accounts/6061867848/containers/96331105",
            "accountId": "6061867848",
            "containerId": "96331105",
            "name": "boilerplate-web",
            "publicId": "GTM-T2ZX2NJ",
            "usageContext": [
                "WEB"
            ],
            "fingerprint": "1690537598270",
            "tagManagerUrl": "https://tagmanager.google.com/#/container/accounts/6061867848/containers/96331105/workspaces?apiLink=container",
            "features": {
                "supportUserPermissions": true,
                "supportEnvironments": true,
                "supportWorkspaces": true,
                "supportGtagConfigs": false,
                "supportBuiltInVariables": true,
                "supportClients": false,
                "supportFolders": true,
                "supportTags": true,
                "supportTemplates": true,
                "supportTriggers": true,
                "supportVariables": true,
                "supportVersions": true,
                "supportZones": true,
                "supportTransformations": false
            },
            "tagIds": [
                "GTM-T2ZX2NJ"
            ]
        },
        "tag": [
            {
                "accountId": "6061867848",
                "containerId": "96331105",
                "tagId": "110",
                "name": "[GA4] Cookie creator for Item list & Promotion attribution",
                "type": "cvt_96331105_108",
                "priority": {
                    "type": "INTEGER",
                    "value": "-1000"
                },
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "listClickEvent",
                        "value": "select_item"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "purchaseEvent",
                        "value": "purchase"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "promoClickEvent",
                        "value": "select_promotion"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "addToCartEvent",
                        "value": "add_to_cart"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "cookieExpirationCheckbox",
                        "value": "false"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "detailViewEvent",
                        "value": "view_item"
                    },
                    {
                        "type": "TEMPLATE",
                        "key": "dlType",
                        "value": "ga4"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "productClickTracking",
                        "value": "true"
                    },
                    {
                        "type": "BOOLEAN",
                        "key": "promoClickTracking",
                        "value": "true"
                    }
                ],
                "fingerprint": "1701251225509",
                "tagFiringOption": "ONCE_PER_EVENT",
                "monitoringMetadata": {
                    "type": "MAP"
                },
                "consentSettings": {
                    "consentStatus": "NEEDED",
                    "consentType": {
                        "type": "LIST",
                        "list": [
                            {
                                "type": "TEMPLATE",
                                "value": "analytics_storage"
                            }
                        ]
                    }
                }
            }
        ],
        "variable": [
            {
                "accountId": "6061867848",
                "containerId": "96331105",
                "variableId": "62",
                "name": "[custom JS] promo - promotion_id",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function () {\n  var cookie = {};\n  document.cookie.split(';').forEach(function(el) {\n    var k = el.split('=')[0];\n    var v =el.split('=')[1];\n    cookie[k.trim()] = v;\n  });\n  var promotion_id = decodeURIComponent(cookie['ga4_promo']).split('//')[0];\n  \n  if (promotion_id === 'undefined') {\n    return undefined;\n  } else {\n    return promotion_id;\n  }\n}\n"
                    }
                ],
                "fingerprint": "1672932061214",
                "formatValue": {}
            },
            {
                "accountId": "6061867848",
                "containerId": "96331105",
                "variableId": "63",
                "name": "[custom JS] promo - promotion_name",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function () {\n  var cookie = {};\n  document.cookie.split(';').forEach(function(el) {\n    var k = el.split('=')[0];\n    var v =el.split('=')[1];\n    cookie[k.trim()] = v;\n  });\n  var promotion_name = decodeURIComponent(cookie['ga4_promo']).split('//')[1];\n  \n  if (promotion_name === 'undefined') {\n    return undefined;\n  } else {\n    return promotion_name;\n  }\n}\n"
                    }
                ],
                "fingerprint": "1672932048038",
                "formatValue": {}
            },
            {
                "accountId": "6061867848",
                "containerId": "96331105",
                "variableId": "64",
                "name": "[custom JS] promo - creative_name",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function () {\n  var cookie = {};\n  document.cookie.split(';').forEach(function(el) {\n    var k = el.split('=')[0];\n    var v =el.split('=')[1];\n    cookie[k.trim()] = v;\n  });\n  var creative_name = decodeURIComponent(cookie['ga4_promo']).split('//')[2];\n  \n  if (creative_name === 'undefined') {\n    return undefined;\n  } else {\n    return creative_name;\n  }\n}\n"
                    }
                ],
                "fingerprint": "1672932041408",
                "formatValue": {}
            },
            {
                "accountId": "6061867848",
                "containerId": "96331105",
                "variableId": "65",
                "name": "[custom JS] promo - creative_slot",
                "type": "jsm",
                "parameter": [
                    {
                        "type": "TEMPLATE",
                        "key": "javascript",
                        "value": "function () {\n  var cookie = {};\n  document.cookie.split(';').forEach(function(el) {\n    var k = el.split('=')[0];\n    var v =el.split('=')[1];\n    cookie[k.trim()] = v;\n  });\n  var creative_slot = decodeURIComponent(cookie['ga4_promo']).split('//')[3];\n  \n  if (creative_slot === 'undefined') {\n    return undefined;\n  } else {\n    return creative_slot;\n  }\n}\n"
                    }
                ],
                "fingerprint": "1672932055373",
                "formatValue": {}
            },
            {
                "accountId": "6061867848",
                "containerId": "96331105",
                "variableId": "111",
                "name": "[custom] GA4 Items array",
                "type": "cvt_96331105_107",
                "fingerprint": "1673861500952",
                "formatValue": {}
            }
        ],
        "fingerprint": "1701254808463",
        "tagManagerUrl": "https://tagmanager.google.com/#/versions/accounts/6061867848/containers/96331105/versions/0?apiLink=version",
        "customTemplate": [
            {
                "accountId": "6061867848",
                "containerId": "96331105",
                "templateId": "107",
                "name": "GA4 Items array",
                "fingerprint": "1674569545656",
                "templateData": "___TERMS_OF_SERVICE___\n\nBy creating or modifying this file you agree to Google Tag Manager's Community\nTemplate Gallery Developer Terms of Service available at\nhttps://developers.google.com/tag-manager/gallery-tos (or such other URL as\nGoogle may provide), as modified from time to time.\n\n\n___INFO___\n\n{\n  \"type\": \"MACRO\",\n  \"id\": \"cvt_temp_public_id\",\n  \"version\": 1,\n  \"securityGroups\": [],\n  \"displayName\": \"GA4 Items array\",\n  \"description\": \"\",\n  \"containerContexts\": [\n    \"WEB\"\n  ]\n}\n\n\n___TEMPLATE_PARAMETERS___\n\n[]\n\n\n___SANDBOXED_JS_FOR_WEB_TEMPLATE___\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// Define required APIs and variables\nconst log = require('logToConsole');\nconst dataLayer = require('copyFromDataLayer');\nconst ecommerce = dataLayer('ecommerce', 1);\nconst getCookieValues = require('getCookieValues');\nconst dlEvent = dataLayer('event');\n\nlet items = [];\n\n// function for grabbing Item list name and returning the value (UA)\nfunction listNameUa(ecomObj, prod) {\n    if (prod.hasOwnProperty('list') && prod.list) {\n        return prod.list;\n    } \n    else if (ecomObj.hasOwnProperty('actionField') && ecomObj.actionField.hasOwnProperty('list') && ecomObj.actionField.list) {\n        return ecomObj.actionField.list;\n    } \n    else if (getCookieValues('ga4_list_' + prod.id).length > 0 && getCookieValues('ga4_list_' + prod.id)[0].split('//')[1] !== 'undefined' && getCookieValues('ga4_list_' + prod.id)[0].split('//')[1] !== '') {\n        return getCookieValues('ga4_list_' + prod.id)[0].split('//')[1];\n    } else {\n        return undefined;\n    }\n}\n\n// function for grabbing Item list name and returning the value (GA4)\nfunction listNameGa4(ecomObj, prod) {\n    if (prod.hasOwnProperty('item_list_name') && prod.item_list_name) {\n        return prod.item_list_name;\n    }\n    else if (ecomObj.hasOwnProperty('item_list_name') && ecomObj.item_list_name) {\n        return ecomObj.item_list_name;\n    } \n    else if (getCookieValues('ga4_list_' + prod.item_id).length > 0 && getCookieValues('ga4_list_' + prod.item_id)[0].split('//')[1] !== 'undefined' && getCookieValues('ga4_list_' + prod.item_id)[0].split('//')[1] !== '') {\n        return getCookieValues('ga4_list_' + prod.item_id)[0].split('//')[1];\n    }\n    else {\n        return undefined;\n    }\n}\n\n// function for grabbing Item list position and returning the value (UA)\nfunction listPositionUa(prod) {\n    if (prod.hasOwnProperty('position') && prod.position) {\n        return prod.position;\n    }\n    else if (getCookieValues('ga4_list_' + prod.id).length > 0 && getCookieValues('ga4_list_' + prod.id)[0].split('//')[0] !== 'undefined' && getCookieValues('ga4_list_' + prod.id)[0].split('//')[0] !== '') {\n        return getCookieValues('ga4_list_' + prod.id)[0].split('//')[0];\n    }\n    else {\n        return undefined;\n    }\n}\n\n// function for grabbing Item list position and returning the value (GA4)\nfunction listPositionGa4(prod) {\n    if (prod.hasOwnProperty('index') && prod.index) {\n        return prod.index;\n    }\n    else if (getCookieValues('ga4_list_' + prod.item_id).length > 0 && getCookieValues('ga4_list_' + prod.item_id)[0].split('//')[0] !== 'undefined' && getCookieValues('ga4_list_' + prod.item_id)[0].split('//')[0] !== '') {\n        return getCookieValues('ga4_list_' + prod.item_id)[0].split('//')[0];\n    }\n    else {\n        return undefined;\n    }\n}\n\n// function for grabbing Item list ID and returning the value (only for GA4)\nfunction listIdGa4(ecomObj, prod) {\n    if (prod.hasOwnProperty('item_list_id') && prod.item_list_id) {\n        return prod.item_list_id;\n    }\n    else if (ecomObj.hasOwnProperty('item_list_id') && ecomObj.item_list_id) {\n        return ecomObj.item_list_id;\n    }\n    else if (getCookieValues('ga4_list_' + prod.item_id).length > 0 && getCookieValues('ga4_list_' + prod.item_id)[0].split('//')[2] !== 'undefined' && getCookieValues('ga4_list_' + prod.item_id)[0].split('//')[2] !== '') {\n        return getCookieValues('ga4_list_' + prod.item_id)[0].split('//')[2];\n    }\n    else {\n        return undefined;\n    }\n}\n\n// grabbing UA custom dimensions and metrics\nfunction parseDimensionsMetrics(obj, item) {\n  for (var cd in obj) {\n      if (obj.hasOwnProperty(cd)) {\n          if (cd.match('^dimension[0-9]+')) {\n              item[cd] = obj[cd];\n          }\n      }\n  }\n  for (var cm in obj) {\n      if (obj.hasOwnProperty(cm)) {\n          if (cm.match('^metric[0-9]+')) {\n              item[cm] = obj[cm];\n          }\n      }\n  }\n  return item;\n}\n\n\nfunction buildItem(product, itemListName) {\n  return {\n    item_name: product.hasOwnProperty('name') ? product.name : undefined,\n    item_id: product.hasOwnProperty('id') ? product.id : undefined,\n    price: product.hasOwnProperty('price') ? product.price : 0,\n    item_brand: product.hasOwnProperty('brand') ? product.brand : undefined,\n    item_category: product.hasOwnProperty('category') ? product.category.split('/')[0] : undefined,\n    item_category2: product.hasOwnProperty('category') ? product.category.split('/')[1] : undefined,\n    item_category3: product.hasOwnProperty('category') ? product.category.split('/')[2] : undefined,\n    item_category4: product.hasOwnProperty('category') ? product.category.split('/')[3] : undefined,\n    item_variant: product.hasOwnProperty('variant') ? product.variant : undefined,\n    quantity: product.hasOwnProperty('quantity') ? product.quantity : '1',\n    item_list_name: itemListName,\n    index: listPositionUa(product),\n  };\n}\n\nfunction getItemsFromUAEvent(products, key) {\n    const items = [];\n    for (const product of products) {\n        const itemListName = listNameUa(ecommerce[key], product);\n        let item = buildItem(product, itemListName);\n        item = parseDimensionsMetrics(product, item);\n        items.push(item);\n    }\n    return items;\n}\n\n\n// Check the type of Data Layer and create Items array\nif (ecommerce.hasOwnProperty('items')) {\n    // For all GA4 Data Layer events\n    for (const item of ecommerce.items) {\n        item.item_list_name = listNameGa4(ecommerce, item);\n        item.item_list_id = listIdGa4(ecommerce, item);\n        item.index = listPositionGa4(item);\n        items.push(item);\n    }\n    return items;\n}\nelse if (ecommerce.hasOwnProperty('impressions')) {\n    // UA product list impression event\n    return getItemsFromUAEvent(ecommerce.impressions, 'impressions');\n}\nelse if (ecommerce.hasOwnProperty('click')) {\n    // UA product list click event\n    return getItemsFromUAEvent(ecommerce.click.products, 'click');\n}\nelse if (ecommerce.hasOwnProperty('detail')) {\n    // UA product detail view event\n    return getItemsFromUAEvent(ecommerce.detail.products, 'detail');\n}\nelse if (ecommerce.hasOwnProperty('add')) {\n    // UA product add2cart event\n    return getItemsFromUAEvent(ecommerce.add.products, 'add');\n}\nelse if (ecommerce.hasOwnProperty('remove')) {\n    // UA product remove from cart event\n    return getItemsFromUAEvent(ecommerce.remove.products, 'remove');\n}\nelse if (ecommerce.hasOwnProperty('checkout')) {\n    // UA product checkout event\n    return getItemsFromUAEvent(ecommerce.checkout.products, 'checkout');\n}\nelse if (ecommerce.hasOwnProperty('purchase')) {\n    // UA product purchase event\n    return getItemsFromUAEvent(ecommerce.purchase.products, 'purchase');\n}\nelse {\n    // If it doesn't match anything, return undefined value\n    return undefined;\n}\n\n\n___WEB_PERMISSIONS___\n\n[\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"logging\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"environments\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"debug\"\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"get_cookies\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"cookieAccess\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"any\"\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"read_data_layer\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"keyPatterns\",\n          \"value\": {\n            \"type\": 2,\n            \"listItem\": [\n              {\n                \"type\": 1,\n                \"string\": \"ecommerce\"\n              },\n              {\n                \"type\": 1,\n                \"string\": \"ecommerce.*\"\n              },\n              {\n                \"type\": 1,\n                \"string\": \"event\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  }\n]\n\n\n___TESTS___\n\nscenarios: []\n\n\n___NOTES___\n\n\n\n\n"
            },
            {
                "accountId": "6061867848",
                "containerId": "96331105",
                "templateId": "108",
                "name": "Cookie creator for GA4 item list & Promotion attribution",
                "fingerprint": "1674824383259",
                "templateData": "___TERMS_OF_SERVICE___\n\nBy creating or modifying this file you agree to Google Tag Manager's Community\nTemplate Gallery Developer Terms of Service available at\nhttps://developers.google.com/tag-manager/gallery-tos (or such other URL as\nGoogle may provide), as modified from time to time.\n\n\n___INFO___\n\n{\n  \"type\": \"TAG\",\n  \"id\": \"cvt_temp_public_id\",\n  \"version\": 1,\n  \"securityGroups\": [],\n  \"displayName\": \"Cookie creator for GA4 item list \\u0026 Promotion attribution\",\n  \"brand\": {\n    \"id\": \"brand_dummy\",\n    \"displayName\": \"\"\n  },\n  \"description\": \"\",\n  \"containerContexts\": [\n    \"WEB\"\n  ]\n}\n\n\n___TEMPLATE_PARAMETERS___\n\n[\n  {\n    \"type\": \"LABEL\",\n    \"name\": \"Info\",\n    \"displayName\": \"This tag is used to create/delete cookies that will help attribute ecommerce revenue in GA4 to appropriate List name or Promotion. \\n\\u003c/br\\u003e\\n\\u003c/br\\u003e\\nThe tag is doing following actions:\\u003c/br\\u003e\\n\\u003cli\\u003e When user interacts with product (below, you must specify what this action is), it creates cookies and stores List information inside the cookies. Name of the cookie will be \\\"\\u003cb\\u003ega4_list_{{item ID}}\\u003c/b\\u003e\\\". For each product user interacts, tag will create new cookie and store List information in it\\n\\u003cli\\u003e When user clicks on promotion, tag creates cookie called \\\"\\u003cb\\u003ega4_promo\\u003c/b\\u003e\\\" and stores promotion information inside the cookie. Only last clicked promotion information is stored in the cookie.\\n\\u003cli\\u003e When user makes a purchase, \\\"\\u003cb\\u003ega4_promo\\u003c/b\\u003e\\\" cookie will be deleted and any \\\"\\u003cb\\u003ega4_list_{{item ID}}\\u003c/b\\u003e\\\" cookies with purchased item ID will be deleted \\n\\u003c/br\\u003e\\n\\u003c/br\\u003e\"\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"dlTypeSettings\",\n    \"displayName\": \"Data Layer Type\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": [\n      {\n        \"type\": \"SELECT\",\n        \"name\": \"dlType\",\n        \"displayName\": \"\",\n        \"macrosInSelect\": false,\n        \"selectItems\": [\n          {\n            \"value\": \"ga4\",\n            \"displayValue\": \"Google Analytics 4\"\n          },\n          {\n            \"value\": \"ua\",\n            \"displayValue\": \"Universal Analytics\"\n          }\n        ],\n        \"simpleValueType\": true,\n        \"alwaysInSummary\": true,\n        \"help\": \"\",\n        \"clearOnCopy\": true\n      }\n    ],\n    \"help\": \"What is the type of Data Layer that you use to push ecommerce information - GA4 or Universal Analytics?\"\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"trackingGroup\",\n    \"displayName\": \"Which information you want to collect?\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": [\n      {\n        \"type\": \"CHECKBOX\",\n        \"name\": \"promoClickTracking\",\n        \"checkboxText\": \"Promotion Attribution\",\n        \"simpleValueType\": true,\n        \"help\": \"\\u003cb\\u003eIMPORTANT:\\u003c/b\\u003e Promotion information needs to be available on Promotion Click event! Otherwise, this solution won\\u0027t work.\\n\\u003c/br\\u003e\\n\\u003c/br\\u003e\\nIf you enable this option, cookie will collect any promo information which is available on \\u003cb\\u003ePromo Click\\u003c/b\\u003e event:\\n\\u003c/br\\u003e\\u003cli\\u003e\\u003cb\\u003epromotion_name\\u003c/b\\u003e (\\u003cb\\u003ename\\u003c/b\\u003e parameter in UA promo dataLayer), \\n\\u003c/br\\u003e\\u003cli\\u003e\\u003cb\\u003epromotion_id\\u003c/b\\u003e (\\u003cb\\u003eid\\u003c/b\\u003e parameter in UA promo dataLayer),\\n\\u003c/br\\u003e\\u003cli\\u003e\\u003cb\\u003ecreative_name\\u003c/b\\u003e (\\u003cb\\u003ecreative\\u003c/b\\u003e parameter in UA promo dataLayer) and\\n\\u003c/br\\u003e\\u003cli\\u003e\\u003cb\\u003ecreative_slot\\u003c/b\\u003e (\\u003cb\\u003eposition\\u003c/b\\u003e parameter in UA promo dataLayer)\",\n        \"alwaysInSummary\": true\n      },\n      {\n        \"type\": \"TEXT\",\n        \"name\": \"promoClickEvent\",\n        \"displayName\": \"Promotion Click event name in Data Layer\",\n        \"simpleValueType\": true,\n        \"alwaysInSummary\": false,\n        \"valueHint\": \"e.g. select_promotion\",\n        \"help\": \"Name of event which is used to push ecommerce \\u003cb\\u003ePromotion Click\\u003c/b\\u003e information into Data Layer (e.g. select_promotion or promotionClick)\",\n        \"enablingConditions\": [\n          {\n            \"paramName\": \"promoClickTracking\",\n            \"paramValue\": true,\n            \"type\": \"EQUALS\"\n          }\n        ],\n        \"valueValidators\": [\n          {\n            \"type\": \"NON_EMPTY\"\n          }\n        ],\n        \"clearOnCopy\": true\n      },\n      {\n        \"type\": \"CHECKBOX\",\n        \"name\": \"productClickTracking\",\n        \"checkboxText\": \"Product List Attribution\",\n        \"simpleValueType\": true,\n        \"valueValidators\": [],\n        \"help\": \"\\u003cb\\u003eIMPORTANT:\\u003c/b\\u003e List information needs to be available on Product List Click, Detail View or Add2Cart event! Otherwise, this solution won\\u0027t work.\\n\\u003c/br\\u003e\\n\\u003c/br\\u003e\\nIf you enable this option, tag will collect and store into the cookie following List information if it is available in Data Layer:\\n\\u003c/br\\u003e\\u003cli\\u003e \\u003cb\\u003eItem List Name\\u003c/b\\u003e (\\u003cb\\u003elist\\u003c/b\\u003e parameter in UA dataLayer),\\n\\u003c/br\\u003e\\u003cli\\u003e\\u003cb\\u003eItem List Position\\u003c/b\\u003e (\\u003cb\\u003eposition\\u003c/b\\u003e parameter in UA dataLayer)\\n\\u003c/br\\u003e\\u003cli\\u003eand \\u003cb\\u003eItem List ID\\u003c/b\\u003e (\\u003cb\\u003eitem_list_id\\u003c/b\\u003e parameter if you use GA4 dataLayer and if you have this information)\",\n        \"alwaysInSummary\": true\n      },\n      {\n        \"type\": \"GROUP\",\n        \"name\": \"eventNamewithListInfo\",\n        \"displayName\": \"\",\n        \"groupStyle\": \"NO_ZIPPY\",\n        \"subParams\": [\n          {\n            \"type\": \"LABEL\",\n            \"name\": \"infoLabel\",\n            \"displayName\": \"List information can be available on multiple ecommerce actions (e.g. Product List Click, Detail View or Add to Cart). \\u003c/br\\u003e\\nIf you have List information available on multiple ecommerce actions, provide name of event in corresponding field below.\\n\\u003c/br\\u003e\\n\\u003c/br\\u003e\\nIn case if you have List information available only on one ecommerce action (e.g. Product List Click), provide event name only in that field. Rest of the fields you can leave empty. \\n\\u003c/br\\u003e\\n\\u003c/br\\u003e\\n\\u003cb\\u003eIMPORTANT:\\u003c/b\\u003e In order for solution to work, you must specify at least one ecommerce event which contains list information in Data Layer.\"\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"listClickEvent\",\n            \"displayName\": \"Product List Click event name in Data Layer (leave empty if you don\\u0027t have List information available on Product List Click event)\",\n            \"simpleValueType\": true,\n            \"enablingConditions\": [],\n            \"valueHint\": \"e.g. select_item OR productClick\",\n            \"help\": \"Name of event which is used to push ecommerce Product List Click information into Data Layer (e.g. select_item or productClick) \\u003c/br\\u003e \\u003c/br\\u003e \\u003cb\\u003eIMPORTANT: \\n\\u003c/b\\u003e Provide event name only if you send List information with Product List Click ecommerce action!\",\n            \"alwaysInSummary\": false,\n            \"valueValidators\": [],\n            \"clearOnCopy\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"detailViewEvent\",\n            \"displayName\": \"Product Detail View event name in Data Layer (leave empty if you don\\u0027t have List information available on DetailView event)\",\n            \"simpleValueType\": true,\n            \"enablingConditions\": [],\n            \"valueHint\": \"e.g. view_item OR ProductDetailView\",\n            \"help\": \"Name of event which is used to push ecommerce List information into Data Layer (e.g. view_item or detailView) \\u003c/br\\u003e \\u003c/br\\u003e \\u003cb\\u003eIMPORTANT: \\u003c/b\\u003e Provide event name only if you send List information with Product Detail View ecommerce action!\",\n            \"alwaysInSummary\": false,\n            \"valueValidators\": [],\n            \"clearOnCopy\": true\n          },\n          {\n            \"type\": \"TEXT\",\n            \"name\": \"addToCartEvent\",\n            \"displayName\": \"Product Add to Cart event name in Data Layer (leave empty if you don\\u0027t have List information available on AddToCart event)\",\n            \"simpleValueType\": true,\n            \"enablingConditions\": [],\n            \"valueHint\": \"e.g. add_to_cart OR addToCart\",\n            \"help\": \"Name of event which is used to push ecommerce List information into Data Layer (e.g. add_to_cart OR addToCart) \\u003c/br\\u003e \\u003c/br\\u003e \\u003cb\\u003eIMPORTANT: \\u003c/b\\u003e Provide event name only if you send List information with Product Add to Cart ecommerce action!\",\n            \"alwaysInSummary\": false,\n            \"valueValidators\": [],\n            \"clearOnCopy\": true\n          }\n        ],\n        \"enablingConditions\": [\n          {\n            \"paramName\": \"productClickTracking\",\n            \"paramValue\": true,\n            \"type\": \"EQUALS\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"purchaseEventSection\",\n    \"displayName\": \"Purchase event\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": [\n      {\n        \"type\": \"TEXT\",\n        \"name\": \"purchaseEvent\",\n        \"displayName\": \"Purchase event name in Data Layer\",\n        \"simpleValueType\": true,\n        \"valueHint\": \"e.g. purchase\",\n        \"help\": \"Name of event which is used to push ecommerce \\u003cb\\u003ePurchase\\u003c/b\\u003e information into Data Layer (e.g. purchase)\",\n        \"alwaysInSummary\": false,\n        \"valueValidators\": [\n          {\n            \"type\": \"NON_EMPTY\"\n          }\n        ],\n        \"clearOnCopy\": true\n      }\n    ],\n    \"help\": \"On Purchase event, cookies will be deleted.\\n\\u003c/br\\u003e\\n\\u003c/br\\u003e\\nBehavior:\\n\\u003c/br\\u003e\\n\\u003cli\\u003eIf user purchased product that has List information stored in \\\"ga4_list_{{item ID}}\\\" cookie, cookie will be deleted after purchase\\n\\u003cli\\u003eIf user had any Promo information stored in the cookie \\\"ga4_promo\\\", cookie will be deleted after purchase\"\n  },\n  {\n    \"type\": \"GROUP\",\n    \"name\": \"cookieSettings\",\n    \"displayName\": \"By default, cookies are session based, which means cookies will be erased when browser session ends.\",\n    \"groupStyle\": \"NO_ZIPPY\",\n    \"subParams\": [\n      {\n        \"type\": \"CHECKBOX\",\n        \"name\": \"cookieExpirationCheckbox\",\n        \"checkboxText\": \"Modify cookie expiration setting?\",\n        \"simpleValueType\": true,\n        \"clearOnCopy\": true\n      }\n    ]\n  },\n  {\n    \"type\": \"TEXT\",\n    \"name\": \"cookieLength\",\n    \"displayName\": \"Cookie expiration\",\n    \"simpleValueType\": true,\n    \"defaultValue\": 0,\n    \"help\": \"By default, value is 0. This means the cookie will be session-based - when browser session ends, cookie will be deleted. \\nFor example, if you want to keep List information for 24 hours, put value 86400 ( 24 * 60 * 60).\\n\\u003c/br\\u003e\\n\\u003c/br\\u003e\\n\\u003cb\\u003eRECOMMENDED:\\u003c/b\\u003e use default value (0), so cookies are deleted after every browser session\",\n    \"valueUnit\": \"seconds\",\n    \"alwaysInSummary\": false,\n    \"valueValidators\": [\n      {\n        \"type\": \"NON_EMPTY\"\n      }\n    ],\n    \"enablingConditions\": [\n      {\n        \"paramName\": \"cookieExpirationCheckbox\",\n        \"paramValue\": true,\n        \"type\": \"EQUALS\"\n      }\n    ],\n    \"clearOnCopy\": true\n  }\n]\n\n\n___SANDBOXED_JS_FOR_WEB_TEMPLATE___\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n// Get APIs\nconst dataLayer = require('copyFromDataLayer');\nconst getCookieValues = require('getCookieValues');\nconst setCookie = require('setCookie');\nconst log = require('logToConsole');\nconst makeNumber = require('makeNumber');\nconst getUrl = require('getUrl');\n\n// Get values from defined fields in the Tag\nconst dlType = data.dlType;\nconst cookieLength = data.cookieLength;\nconst listClickEvent = data.listClickEvent;\nconst detailViewEvent = data.detailViewEvent;\nconst addToCartEvent = data.addToCartEvent;\nconst promoClickEvent = data.promoClickEvent;\nconst purchaseEvent = data.purchaseEvent;\n\n// Set necessary information for creating/removing cookie\nconst dlEvent = dataLayer('event');\nconst ecommerce = dataLayer('ecommerce', 2);\nconst maxAge = makeNumber(cookieLength) > 1 ? makeNumber(cookieLength) : undefined;\nconst hostname = getUrl('host').indexOf('www.') > -1 ? getUrl('host').replace('www.', '') : getUrl('host');\nconst optionsAddCookie = {\n    domain: hostname,\n    path: '/',\n   'max-age': maxAge,\n};\nconst optionsRemoveCookie = {\n    domain: hostname,\n    path: '/',\n    expires: 'Thu, 01 Jan 1970 00:00:01 GMT',\n};\n\n\n// Create/delete cookies if it is GA4 dataLayer\nif (dlType === 'ga4') {\n    switch (dlEvent) {\n       \n        case listClickEvent:\n        case detailViewEvent:\n        case addToCartEvent:\n            for (const item of ecommerce.items) {\n                const productID = item.hasOwnProperty('item_id') ? item.item_id : undefined;\n                const listPosition = item.hasOwnProperty('index') ? item.index : undefined;\n                const listName = \n                    (item.hasOwnProperty('item_list_name')) ? (item.item_list_name)\n                      : ((ecommerce.hasOwnProperty('item_list_name')) ? (ecommerce.item_list_name)\n                        : undefined);\n                const listId =\n                    (item.hasOwnProperty('item_list_id')) ? (item.item_list_id)\n                      : ((ecommerce.hasOwnProperty('item_list_id')) ? (ecommerce.item_list_id)\n                      : undefined);\n              \n                if (item.hasOwnProperty('item_list_name') || ecommerce.hasOwnProperty('item_list_name')) {\n                      // If there is item_list_name parameter inside Items array, create \"ga4_list_{{Product ID}}\" cookie with List information and store information\n                      setCookie('ga4_list_' + productID, listPosition + '//' + listName + '//' + listId, optionsAddCookie);\n                }\n            }\n            break;\n  \n      case promoClickEvent:\n          const promotionID = \n              (ecommerce.hasOwnProperty('promotion_id')) ? (ecommerce.promotion_id)\n                  : ((ecommerce.items[0].hasOwnProperty('promotion_id')) ? (ecommerce.items[0].promotion_id)\n                      : undefined);\n          const promotionName = \n              (ecommerce.hasOwnProperty('promotion_name')) ? (ecommerce.promotion_name)\n                  : ((ecommerce.items[0].hasOwnProperty('promotion_name')) ? (ecommerce.items[0].promotion_name)\n                      : undefined);\n          const creativeName = \n              (ecommerce.hasOwnProperty('creative_name')) ? (ecommerce.creative_name)\n                  : ((ecommerce.items[0].hasOwnProperty('creative_name')) ? (ecommerce.items[0].creative_name)\n                      : undefined);\n          const creativeSlot = \n              (ecommerce.hasOwnProperty('creative_slot')) ? (ecommerce.creative_slot)\n                  : ((ecommerce.items[0].hasOwnProperty('creative_slot')) ? (ecommerce.items[0].creative_slot)\n                      : undefined);\n          // create \"ga4_promo\" cookie with Promo information\n          setCookie('ga4_promo', promotionID + '//' + promotionName + '//' + creativeName + '//' + creativeSlot, optionsAddCookie);\n          break;\n\n      case purchaseEvent:\n          for (const item of ecommerce.items) {\n              const productID = item.hasOwnProperty('item_id') ? item.item_id : undefined;\n              if (getCookieValues('ga4_list_' + productID).length > 0) {\n                  // remove \"ga4_list_{{Product ID}}\" cookie if it exists for purchased products\n                  setCookie('ga4_list_' + productID, 'remove', optionsRemoveCookie);\n              }\n          }\n          if (getCookieValues('ga4_promo').length > 0) {\n              // remove \"ga4_promo\" cookie if it exists\n              setCookie('ga4_promo', 'remove', optionsRemoveCookie);\n          }\n          break;\n    \n      default:\n          break;\n    }\n}\n\n\nfunction setGA4ListCookie(ecommerce, property) {\n    for (const product of ecommerce[property].products) {\n        const productID = product.hasOwnProperty('id') ? product.id : undefined;\n        const listPosition = product.hasOwnProperty('position') ? product.position : undefined;\n        const listName = \n            (product.hasOwnProperty('list')) ? (product.list)\n                : ((ecommerce[property].hasOwnProperty('actionField') && ecommerce[property].actionField.hasOwnProperty('list')) ? (ecommerce[property].actionField.list)\n                  : undefined);\n      \n        if (product.hasOwnProperty('list') || (ecommerce[property].hasOwnProperty('actionField') && ecommerce[property].actionField.hasOwnProperty('list'))) {\n            // If there is list parameter inside Products array, create \"ga4_list_{{Product ID}}\" cookie with List information and store information\n            setCookie('ga4_list_' + productID, listPosition + '//' + listName + '//', optionsAddCookie);\n        }\n    }\n}\n\n// Create/delete cookie if it is UA dataLayer\nif (dlType === 'ua') {\n    switch (dlEvent) {\n      \n        case listClickEvent:\n        case detailViewEvent:\n        case addToCartEvent:\n        \n            if (dlEvent === listClickEvent) {\n                setGA4ListCookie(ecommerce, 'click');\n            } \n            else if (dlEvent === detailViewEvent) {\n                setGA4ListCookie(ecommerce, 'detail');\n            } \n            else if (dlEvent === addToCartEvent){\n                setGA4ListCookie(ecommerce, 'add');\n            }\n            break;\n\n        case promoClickEvent:\n            const promo = ecommerce.promoClick.promotions[0];\n            const promotionID = promo.hasOwnProperty('id') ? promo.id : undefined;\n            const promotionName = promo.hasOwnProperty('name') ? promo.name : undefined;\n            const creativeName = promo.hasOwnProperty('creative') ? promo.creative : undefined;\n            const creativeSlot = promo.hasOwnProperty('position') ? promo.position : undefined;\n            // create \"ga4_promo\" cookie with Promo information\n            setCookie('ga4_promo', promotionID + '//' + promotionName + '//' + creativeName + '//' + creativeSlot, optionsAddCookie);\n            break;\n\n        case purchaseEvent:\n            for (const product of ecommerce.purchase.products) {\n                if (getCookieValues('ga4_list_' + product.id).length > 0) {\n                    // remove \"ga4_list_{{Product ID}}\" cookie if it exists for purchased products\n                    setCookie('ga4_list_' + product.id, 'remove', optionsRemoveCookie);\n                }\n            }\n            if (getCookieValues('ga4_promo').length > 0) {\n                // remove \"ga4_promo\" cookie if it exists\n                setCookie('ga4_promo', 'remove', optionsRemoveCookie);\n            }\n            break;\n\n        default:\n            log('GTM Cookie Creator tag - Tag fired on other event which is not specified in the Tag configuration. Please check Cookie Creator tag configuration again and make sure tag only fires on events which contain List and/or Promotion information.');\n            break;\n    }\n}\n\ndata.gtmOnSuccess();\n\n\n___WEB_PERMISSIONS___\n\n[\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"logging\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"environments\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"debug\"\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"get_cookies\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"cookieAccess\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"any\"\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"read_data_layer\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"keyPatterns\",\n          \"value\": {\n            \"type\": 2,\n            \"listItem\": [\n              {\n                \"type\": 1,\n                \"string\": \"ecommerce.*\"\n              },\n              {\n                \"type\": 1,\n                \"string\": \"event\"\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"set_cookies\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"allowedCookies\",\n          \"value\": {\n            \"type\": 2,\n            \"listItem\": [\n              {\n                \"type\": 3,\n                \"mapKey\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"name\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"domain\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"path\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"secure\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"session\"\n                  }\n                ],\n                \"mapValue\": [\n                  {\n                    \"type\": 1,\n                    \"string\": \"*\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"*\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"*\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"any\"\n                  },\n                  {\n                    \"type\": 1,\n                    \"string\": \"any\"\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  },\n  {\n    \"instance\": {\n      \"key\": {\n        \"publicId\": \"get_url\",\n        \"versionId\": \"1\"\n      },\n      \"param\": [\n        {\n          \"key\": \"urlParts\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"any\"\n          }\n        },\n        {\n          \"key\": \"queriesAllowed\",\n          \"value\": {\n            \"type\": 1,\n            \"string\": \"any\"\n          }\n        }\n      ]\n    },\n    \"clientAnnotations\": {\n      \"isEditedByUser\": true\n    },\n    \"isRequired\": true\n  }\n]\n\n\n___TESTS___\n\nscenarios: []\nsetup: ''\n\n\n___NOTES___\n\n\n\n\n"
            }
        ]
    }
}